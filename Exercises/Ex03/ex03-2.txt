vectorとlistについての類似点と相異点

<実装について>
まず類似点について実装の観点からは、変数をコンテナに追加する操作や先頭、末尾へのアクセス、イテレータの操作などSTLコンテナの基本的な性質は同じである。一方で実装の観点からの相違点として、アクセス方式の違いやイテレータ破壊の有無などがある。アクセス方式が異なることによりvectorには要素の添字を直接指定してアクセスすることができるがlistにはできず、ソートについてもそれぞれ異なる関数を使用しなくてはならない。またvectorでは中間に位置する要素を削除するときなどイテレータ破壊が起きる問題があったが、listではどの関数を用いて操作をしてもイテレータ破壊が発生しない。

<プログラム中の挙動について>
まず類似点について、vectorもlistも特定の要素を検索するのに同じ計算量(O(n))を要する点がある。どちらも先頭、最後以外の要素にアクセスする場合は要素を一つずつ見る必要があるため、検索を多用する場合などは非効率である。一方で相違点についてメモリの使用が挙げられる。vectorは要素が連続して局所的にメモリをとるが、listは局所性がなく離れたメモリ位置に配置される。

<それぞれのコンテナが有利になるケース>
vectorが有利な場合:
・先頭、または末尾でない中間に位置する要素に頻繁にアクセスする場合
・格納する型の容量が極めて小さいとき

list が有利な場合:
・頻繁に要素の挿入または削除を行う場合
